---
import { Image } from "astro:assets";
import LinkIcon from "@icon/link.svg";
import GitHubIcon from "@icon/github.svg";
import SkillBadge from "./SkillBadge.astro";

const { data } = Astro.props;
const projects = data[0];
const skills = data[1];
---

<section
  id="Projects"
  aria-labelledby="projects-heading"
  itemscope
  itemtype="https://schema.org/CollectionPage"
>
  <h2 id="projects-heading">{projects.title}</h2>
  <hr />
  <div class="containgrid container grid gap-3 2xl:grid-cols-2" role="list">
    {
      projects &&
        projects.list &&
        projects.list.length > 0 &&
        projects.list.map((projectData) => (
          <div
            class="block rounded-lg border border-gray-200"
            role="listitem"
            itemscope
            itemtype="https://schema.org/SoftwareApplication"
            itemprop="hasPart"
          >
            <meta
              itemprop="applicationCategory"
              content="Software Development"
            />
            <div hidden itemprop="keywords">
              {projectData.keywords?.join(", ")}
            </div>
            <div class="relative grid grid-cols-[auto_auto]">
              <div>
                {projectData.image?.trim() && (
                  <Image
                    class="h-full w-32 rounded-s-lg object-cover sm:w-48"
                    height={160}
                    width={160}
                    src={projectData.image}
                    alt={projectData.name}
                    itemprop="image"
                  />
                )}
              </div>
              <div class="grow p-4">
                <div class="flex min-h-24 flex-col justify-center gap-y-1.5 text-pretty break-words">
                  <div class="flex justify-between">
                    {projectData.name?.trim() &&
                      (projectData.url?.trim() ? (
                        <a
                          href={projectData.url}
                          target="_blank"
                          class="flex gap-1.5 font-semibold text-gray-800 dark:text-neutral-300"
                          aria-label={`Visit ${projectData.name} project website`}
                          itemprop="url"
                        >
                          <h3 itemprop="name">{projectData.name}</h3>
                          <Image
                            src={LinkIcon}
                            alt=""
                            width={16}
                            height={16}
                            aria-hidden="true"
                            style="width:16px; height:16px;"
                          />
                        </a>
                      ) : (
                        <h3
                          itemprop="name"
                          class="font-semibold text-gray-800 dark:text-neutral-300"
                        >
                          {projectData.name}
                        </h3>
                      ))}
                    {projectData.githubURL?.trim() && (
                      <a
                        href={projectData.githubURL}
                        target="_blank"
                        rel="noopener noreferrer"
                        aria-label={`View ${projectData.name} source code on GitHub`}
                        itemprop="codeRepository"
                      >
                        <Image
                          src={GitHubIcon}
                          alt={`Go to ${projectData.name}`}
                          title={`Go to ${projectData.name}`}
                          width={20}
                          height={20}
                          aria-hidden="true"
                          style="width:20px; height:20px;"
                        />
                      </a>
                    )}
                  </div>
                  <div>
                    {projectData.description?.trim() && (
                      <p
                        class="text-sm text-pretty text-gray-500 dark:text-neutral-500"
                        itemprop="description"
                      >
                        {projectData.description}
                      </p>
                    )}
                  </div>
                  <div
                    class="flex flex-row flex-wrap items-center gap-y-2"
                    role="list"
                    aria-label="Technologies used"
                  >
                    {skills &&
                      skills.list &&
                      skills.list.length > 0 &&
                      skills.list
                        .filter(
                          (skillData) =>
                            projectData.keywords &&
                            projectData.keywords.includes(skillData.name),
                        )
                        .map((skillData) => (
                          <div role="listitem">
                            <SkillBadge
                              name={skillData.name}
                              icon={skillData.icon}
                            />
                          </div>
                        ))}
                  </div>
                </div>
              </div>
            </div>
          </div>
        ))
    }
  </div>
</section>
