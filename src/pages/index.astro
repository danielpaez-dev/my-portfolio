---
import "../styles/global.css";
import Layout from "@/layouts/Layout.astro";
import Hero from "@components/Hero.astro";
import About from "@components/About.astro";
import Experience from "@components/Experience.astro";
import Projects from "@components/Projects.astro";
import Education from "@components/Education.astro";
import CoursesAndCertifications from "@components/CoursesAndCertifications.astro";
import Nav from "@components/Nav.astro";
import Skills from "@components/Skills.astro";
import Footer from "@components/Contact.astro";
import { getTranslations, availableLanguages } from "@/i18n/utils/utils";

// Detectamos el idioma del cliente a partir del header "accept-language"
const acceptLang = Astro.request.headers.get("accept-language") || "";
const detectedLang = acceptLang.split(",")[0].split("-")[0];
const lang = availableLanguages.includes(detectedLang)
  ? detectedLang
  : availableLanguages[0];

// Importamos dinámicamente el archivo de traducciones correspondiente
const translations = getTranslations(lang);

// Extraemos las secciones de traducción que utilizaremos
const {
  basics = {},
  about: about = {},
  experience = {},
  volunteer = {},
  education = {},
  awards = {},
  certificates = {},
  publications = {},
  skills = {},
  languages = {},
  interests = {},
  references = {},
  projects = {},
  command = {},
  footer = {},
  active = {},
  print = {},
} = translations;

const heroPrintData = {
  "image-hero": print["image-hero"],
  "description-hero": print["description-hero"],
};
---

<Layout>
  <div
    class="containerPage container mx-auto flex flex-col items-center justify-center gap-y-3 p-6 md:p-20 xl:px-75"
  >
    <div class={print.Hero ? "" : "noprint"}>
      {active.Hero && <Hero data={[basics, heroPrintData]} data-section />}
    </div>
    <div class={print.About ? "" : "noprint"}>
      {active.About && <About data={about} data-section />}
    </div>
    <div class={print.Experience ? "" : "noprint"}>
      {
        active.Experience && (
          <Experience data={[experience, skills]} data-section />
        )
      }
    </div>
    <div class={print.Projects ? "" : "noprint"}>
      {active.Projects && <Projects data={[projects, skills]} data-section />}
    </div>
    <div class={print.Education ? "" : "noprint"}>
      {active.Education && <Education data={education} data-section />}
    </div>
    <div class={print.CoursesAndCertifications ? "" : "noprint"}>
      {
        active.CoursesAndCertifications && (
          <CoursesAndCertifications data={certificates} data-section />
        )
      }
    </div>
    <div class={print.Skills ? "" : "noprint"}>
      {active.Skills && <Skills data={[skills, languages]} data-section />}
    </div>
    <div class={print.Footer ? "" : "noprint"}>
      {active.Footer && <Footer data={[basics, footer]} data-section />}
    </div>
    <div class={print.Nav ? "" : "noprint"}>
      {active.Nav && <Nav data={[active, basics, command]} />}
    </div>
  </div>
</Layout>
